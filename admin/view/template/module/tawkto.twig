{#
@package tawk.to Integration
@author tawk.to
@copyright (C) 2024 tawk.to
@license GNU/GPLv3 http://www.gnu.org/licenses/gpl-3.0.html
#}
{{ header }}
<link href="https://plugins.tawk.to/public/bootstrap/css/bootstrap.min.css" rel="stylesheet">
{{ column_left }}

<div id="content">
	<div class="page-header">
		<div class="container-fluid">
			<div class="pull-right">&nbsp;</div>
			<ul class="breadcrumb">
				{% for breadcrumb in breadcrumbs %}
				<li class="breadcrumb-item"><a href="{{ breadcrumb.href }}">{{ breadcrumb.text }}</a></li>
				{% endfor %}
			</ul>
		</div>
	</div>

	<div class="container-fluid">
		{% if error_warning %}
		<div class="alert alert-danger alert-dismissible"><i class="fa fa-exclamation-circle"></i> {{ error_warning }}
			<button type="button" class="close" data-dismiss="alert">&times;</button>
		</div>
		{% endif %}

		<div class="box">
			<div class="heading">
				<h1><img src="../extension/tawkto/admin/view/image/module/tawky.png" alt="" /> {{ heading_title }}</h1>
			</div>

			<label for="store_id" class="storeids-label">Select Store</label>
			<select name="store_id" class="storeids">
				{% for store in hierarchy %}
				<option value="{{ store.id }}">{{ store.name }}</option>
				{% endfor %}
			</select>

			<div class="box">
				{% if same_user == false %}
				<div id="widget_already_set" class="alert alert-warning">Notice: Widget already set by other user</div>
				{% endif %}
			</div>
			<div class="content" style="position: relative;">
				<div id="loader">
					<img src="../extension/tawkto/admin/view/image/module/loader.gif" alt="" />
				</div>

				<iframe id="tawkIframe" src=""></iframe>
			</div>
		</div>
		<div class="box visibility_block">
			<div class="row">
				<div class="col-lg-10">
					<form id="module_form" class="form-horizontal" action="" method="post">
						<div class="col-lg-12">
							<div class="panel-heading"><strong>Visibility Settings</strong></div>
						</div>
						<div class="form-group col-lg-12 row">
							<label for="always_display" class="col-xs-6 control-label">Always show Tawk.To widget on
								every page</label>
							<div class="col-xs-6 control-label ">
								<input type="checkbox" class="control-label col-xs-6" name="always_display"
									id="always_display" value="1" {{(display_opts.always_display)?'checked':''}} />
							</div>
						</div>
						<div class="form-group col-lg-12 row">
							<label for="show_onfrontpage" class="col-xs-6 control-label">Show on frontpage</label>
							<div class="col-xs-6 control-label ">
								<input type="checkbox" class="control-label col-xs-6" name="show_onfrontpage"
									id="show_onfrontpage" value="1" {{(display_opts.show_onfrontpage)?'checked':''}} />
							</div>
						</div>
						<div class="form-group col-lg-12 row">
							<label for="show_oncategory" class="col-xs-6 control-label">Show on category pages</label>
							<div class="col-xs-6 control-label ">
								<input type="checkbox" class="control-label col-xs-6" name="show_oncategory"
									id="show_oncategory" value="1" {{(display_opts.show_oncategory)?'checked':''}} />
							</div>
						</div>
						<div class="form-group col-lg-12" style="margin-bottom: 1rem;">
							<div class="col-lg-6 col-xs-12">
								<button type="submit" value="1" id="module_form_submit_btn" name="submitBlockCategories"
									class="btn btn-default pull-right"><i class="process-icon-save"></i> Save</button>
							</div>
							<div class="col-lg-6 col-xs-12">
								<div id="optionsSuccessMessage" class="alert alert-success col-lg-12">
									Successfully set widget options to your site
								</div>
							</div>
						</div>
					</form>
				</div>
			</div>
		</div>
	</div>
</div>
<script>
	var currentHost = window.location.protocol + '//' + window.location.host,
		baseUrl = '{{ base_url }}',
		storeHierarchy = {{ hierarchy | json_encode() }};

	jQuery('#tawkIframe').on('load', function () {
		jQuery('#loader').hide();
		jQuery(this).show();
	});

	// Reload iframe on store change
	jQuery('select[name="store_id"]').on('change', function () {
		displayWidget(this.value);
	});

	// Loads iframe with saved widget settings
	function displayWidget(store_id = '0') {
		$('#tawkIframe').hide();
		$('#loader').show();

		var src = baseUrl + '/generic/widgets?';

		for (store of storeHierarchy) {
			if (store.id !== store_id) {
				continue;
			}

			if (store.current.widgetId) {
				src = src + '&currentWidgetId=' + store.current.widgetId;
			}
			if (store.current.pageId) {
				src = src + '&currentPageId=' + store.current.pageId;
			}
		}
		src = src + '&pltf=opencart&pltfv=3&parentDomain=' + currentHost;

		jQuery('#tawkIframe').attr('src', src);
	}

	// Init iframe
	displayWidget();

	window.addEventListener('message', function (e) {

		if (e.origin === baseUrl) {
			if (e.data.action === 'setWidget') {
				setTawkWidget(e);
			}

			if (e.data.action === 'removeWidget') {
				removeTawkWidget(e);
			}

			if (e.data.action === 'reloadHeight') {
				reloadIframeHeight(e.data.height);
			}
		}
	});

	function reloadIframeHeight(height) {
		if (!height) {
			return;
		}

		var iframe = jQuery('#tawkIframe');
		if (height === iframe.height()) {
			return;
		}

		iframe.height(height);
	}

	// Sets widget settings for selected store
	function setTawkWidget(e) {
		var store_id = jQuery('select[name="store_id"]').val();
		jQuery.post('{{url.set_widget_url}}', {
			pageId: e.data.pageId,
			widgetId: e.data.widgetId,
			store: store_id,
		}, function (r) {
			if (r.success) {
				e.source.postMessage({ action: 'setDone' }, baseUrl);

				// Update saved widget settings
				for (store of storeHierarchy) {
					if (store.id === store_id) {
						store.current = {
							pageId: e.data.pageId,
							widgetId: e.data.widgetId
						}
					}
				}
			} else {
				e.source.postMessage({ action: 'setFail' }, baseUrl);
			}
		});
	}

	// Remove widget settings for selected store
	function removeTawkWidget(e) {
		var store_id = jQuery('select[name="store_id"]').val();
		jQuery.post('{{url.remove_widget_url}}', {
			store: store_id,
		}, function (r) {
			if (r.success) {
				e.source.postMessage({ action: 'removeDone' }, baseUrl);

				for (store of storeHierarchy) {
					if (store.id === store_id) {
						store.current = {};
					}
				}
			} else {
				e.source.postMessage({ action: 'removeFail' }, baseUrl);
			}

		});
	}

	jQuery(document).ready(function () {
		if (jQuery("#always_display").prop("checked")) {
			jQuery('.show_specific').prop('disabled', true);
		} else {
			jQuery('.hide_specific').prop('disabled', true);
		}

		jQuery("#always_display").change(function () {
			if (this.checked) {
				jQuery('.hide_specific').prop('disabled', false);
				jQuery('.show_specific').prop('disabled', true);
			} else {
				jQuery('.hide_specific').prop('disabled', true);
				jQuery('.show_specific').prop('disabled', false);
			}
		});

		// process the form
		jQuery('#module_form').submit(function (event) {
			$path = '{{url.set_options_url}}';
			jQuery.post($path, {
				action: 'set_visibility',
				ajax: true,
				store: parseInt(jQuery('input[name="store_id"]').val()),
				options: jQuery(this).serialize(),
			}, function (r) {
				if (r.success) {
					$('#optionsSuccessMessage').toggle().delay(3000).fadeOut();
				}
			});

			// stop the form from submitting the normal way and refreshing the page
			event.preventDefault();
		});
	});
</script>
{{ footer }}
